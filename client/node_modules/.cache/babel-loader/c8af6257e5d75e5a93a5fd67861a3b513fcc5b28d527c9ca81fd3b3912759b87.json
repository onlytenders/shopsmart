{"ast":null,"code":"var _jsxFileName = \"/Users/rahatmustafin/Documents/Projects/ShopSmart/client/src/components/ShoppingList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport \"./ShoppingList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5001\"; // Базовый URL сервера\nconst socket = io(API_URL, {\n  autoConnect: false\n}); // Инициализация Socket.IO\n\nconst ShoppingList = () => {\n  _s();\n  const {\n    listId\n  } = useParams(); // Получаем listId из URL\n  const navigate = useNavigate();\n  const [items, setItems] = useState([]); // Список элементов\n  const [newItem, setNewItem] = useState(\"\"); // Новый элемент (ввод)\n  const [members, setMembers] = useState([]); // Участники списка\n  const [owner, setOwner] = useState(\"\"); // ID владельца\n  const [ownerEmail, setOwnerEmail] = useState(\"\"); // Email владельца\n  const [listName, setListName] = useState(\"\"); // Название списка\n  const [currentUserId, setCurrentUserId] = useState(\"\"); // ID текущего пользователя\n  const [notification, setNotification] = useState(\"\"); // Уведомления об ошибках/успехе\n\n  // Получение заголовков авторизации\n  const getAuthHeaders = () => ({\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  });\n\n  // Загрузка данных списка\n  const fetchList = async () => {\n    try {\n      console.log(\"Fetching list:\", listId);\n      const res = await axios.get(`${API_URL}/lists/${listId}`, getAuthHeaders());\n      console.log(\"List data:\", res.data);\n      setItems(res.data.items || []);\n      setMembers(res.data.members || []);\n      setOwner(res.data.owner);\n      setOwnerEmail(res.data.ownerEmail);\n      setListName(res.data.name);\n      setCurrentUserId(res.data.currentUserId);\n    } catch (err) {\n      var _err$response, _err$response2, _err$response3, _err$response3$data, _err$response4, _err$response5;\n      console.error(\"Error fetching list:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err);\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === 403 ? \"Вы не участник этого списка\" : ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.error) || \"Ошибка при загрузке списка\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n      if (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.status) === 403 || ((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : _err$response5.status) === 404) {\n        navigate(\"/dashboard\");\n      }\n    }\n  };\n\n  // Подключение к Socket.IO при монтировании компонента\n  useEffect(() => {\n    console.log(\"Socket connecting for list:\", listId, \"user:\", localStorage.getItem(\"userId\"));\n    socket.connect();\n    socket.emit(\"joinList\", {\n      listId,\n      userId: localStorage.getItem(\"userId\")\n    });\n\n    // Обработка события listUpdated\n    socket.on(\"listUpdated\", data => {\n      console.log(\"Received listUpdated:\", data);\n      setItems(data.items || []);\n      setMembers(data.members || []);\n      setListName(data.name || listName);\n    });\n\n    // Загрузка списка при монтировании\n    fetchList();\n\n    // Очистка при размонтировании\n    return () => {\n      console.log(\"Cleaning up socket listeners for list:\", listId);\n      socket.off(\"listUpdated\");\n      socket.disconnect();\n    };\n  }, [listId]);\n\n  // Добавление нового элемента\n  const addItem = async () => {\n    if (!newItem) return;\n    try {\n      console.log(\"Adding item:\", newItem, \"to list:\", listId);\n      const res = await axios.post(`${API_URL}/lists/items/${listId}`, {\n        name: newItem\n      }, getAuthHeaders());\n      console.log(\"Added items:\", res.data.items);\n      setItems(res.data.items);\n      socket.emit(\"updateList\", {\n        listId,\n        items: res.data.items\n      });\n      setNewItem(\"\");\n    } catch (err) {\n      var _err$response6, _err$response7, _err$response8, _err$response8$data;\n      console.error(\"Error adding item:\", ((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : _err$response6.data) || err);\n      const errorMessage = ((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : _err$response7.status) === 404 ? \"Список не найден\" : ((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : (_err$response8$data = _err$response8.data) === null || _err$response8$data === void 0 ? void 0 : _err$response8$data.error) || \"Ошибка при добавлении товара\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Обновление статуса элемента (чекбокс)\n  const toggleItemCompletion = async (itemId, completed) => {\n    try {\n      console.log(\"Toggling item:\", itemId, \"to completed:\", completed);\n      const res = await axios.put(`${API_URL}/lists/items/${itemId}/complete`, {\n        completed\n      }, getAuthHeaders());\n      console.log(\"Updated items:\", res.data.items);\n      setItems(res.data.items);\n      socket.emit(\"updateList\", {\n        listId,\n        items: res.data.items\n      });\n    } catch (err) {\n      var _err$response9, _err$response0, _err$response1, _err$response1$data;\n      console.error(\"Error toggling item completion:\", ((_err$response9 = err.response) === null || _err$response9 === void 0 ? void 0 : _err$response9.data) || err);\n      const errorMessage = ((_err$response0 = err.response) === null || _err$response0 === void 0 ? void 0 : _err$response0.status) === 404 ? \"Элемент или список не найден\" : ((_err$response1 = err.response) === null || _err$response1 === void 0 ? void 0 : (_err$response1$data = _err$response1.data) === null || _err$response1$data === void 0 ? void 0 : _err$response1$data.error) || \"Ошибка при обновлении статуса товара\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Удаление отмеченных элементов\n  const deleteCompletedItems = async () => {\n    try {\n      console.log(\"Deleting completed items from list:\", listId);\n      const res = await axios.delete(`${API_URL}/lists/${listId}/items/completed`, {\n        headers: getAuthHeaders().headers\n      });\n      console.log(\"Updated items after deletion:\", res.data.items);\n      setItems(res.data.items);\n      socket.emit(\"updateList\", {\n        listId,\n        items: res.data.items\n      });\n    } catch (err) {\n      var _err$response10, _err$response11, _err$response12, _err$response12$data;\n      console.error(\"Error deleting completed items:\", ((_err$response10 = err.response) === null || _err$response10 === void 0 ? void 0 : _err$response10.data) || err);\n      const errorMessage = ((_err$response11 = err.response) === null || _err$response11 === void 0 ? void 0 : _err$response11.status) === 404 ? \"Список не найден\" : ((_err$response12 = err.response) === null || _err$response12 === void 0 ? void 0 : (_err$response12$data = _err$response12.data) === null || _err$response12$data === void 0 ? void 0 : _err$response12$data.error) || \"Ошибка при удалении отмеченных товаров\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Вступление в список (оставляем функцию, но убираем кнопку)\n  const joinList = async () => {\n    try {\n      console.log(\"Joining list:\", listId);\n      const res = await axios.post(`${API_URL}/lists/join/${listId}`, {}, getAuthHeaders());\n      console.log(\"Join list response:\", res.data);\n      setNotification(res.data.message);\n      setTimeout(() => setNotification(\"\"), 3000);\n      await fetchList();\n      socket.emit(\"joinList\", {\n        listId,\n        userId: localStorage.getItem(\"userId\")\n      });\n    } catch (err) {\n      var _err$response13, _err$response14, _err$response15, _err$response15$data;\n      console.error(\"Error joining list:\", ((_err$response13 = err.response) === null || _err$response13 === void 0 ? void 0 : _err$response13.data) || err);\n      const errorMessage = ((_err$response14 = err.response) === null || _err$response14 === void 0 ? void 0 : _err$response14.status) === 404 ? \"Список не найден\" : ((_err$response15 = err.response) === null || _err$response15 === void 0 ? void 0 : (_err$response15$data = _err$response15.data) === null || _err$response15$data === void 0 ? void 0 : _err$response15$data.error) || \"Ошибка при вступлении в список\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Поделиться ссылкой на список\n  const shareList = async () => {\n    try {\n      const listUrl = `${window.location.origin}/list/${listId}`;\n      await navigator.clipboard.writeText(listUrl);\n      setNotification(\"Ссылка на список скопирована!\");\n      setTimeout(() => setNotification(\"\"), 3000);\n    } catch (err) {\n      console.error(\"Error copying list URL:\", err);\n      setNotification(\"Ошибка при копировании ссылки\");\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Выход из списка\n  const leaveList = async () => {\n    try {\n      console.log(\"Leaving list:\", listId);\n      const res = await axios.post(`${API_URL}/lists/${listId}/leave`, {}, getAuthHeaders());\n      console.log(\"Leave list response:\", res.data);\n      setNotification(res.data.message);\n      setTimeout(() => setNotification(\"\"), 3000);\n      navigate(\"/dashboard\");\n    } catch (err) {\n      var _err$response16, _err$response17, _err$response17$data;\n      console.error(\"Error leaving list:\", ((_err$response16 = err.response) === null || _err$response16 === void 0 ? void 0 : _err$response16.data) || err);\n      const errorMessage = ((_err$response17 = err.response) === null || _err$response17 === void 0 ? void 0 : (_err$response17$data = _err$response17.data) === null || _err$response17$data === void 0 ? void 0 : _err$response17$data.error) || \"Ошибка при выходе из списка\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Удаление участника (для владельца)\n  const removeMember = async userId => {\n    try {\n      console.log(\"Removing member:\", userId, \"from list:\", listId);\n      const res = await axios.delete(`${API_URL}/lists/${listId}/members/${userId}`, getAuthHeaders());\n      console.log(\"Remove member response:\", res.data);\n      setNotification(res.data.message);\n      setTimeout(() => setNotification(\"\"), 3000);\n      setMembers(members.filter(m => m.userId !== userId));\n      socket.emit(\"updateList\", {\n        listId,\n        members: members.filter(m => m.userId !== userId)\n      });\n    } catch (err) {\n      var _err$response18, _err$response19, _err$response19$data;\n      console.error(\"Error removing member:\", ((_err$response18 = err.response) === null || _err$response18 === void 0 ? void 0 : _err$response18.data) || err);\n      const errorMessage = ((_err$response19 = err.response) === null || _err$response19 === void 0 ? void 0 : (_err$response19$data = _err$response19.data) === null || _err$response19$data === void 0 ? void 0 : _err$response19$data.error) || \"Ошибка при удалении участника\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Обновление названия списка (для владельца)\n  const updateListName = async () => {\n    try {\n      console.log(\"Updating list name to:\", listName, \"for list:\", listId);\n      const res = await axios.put(`${API_URL}/lists/${listId}`, {\n        name: listName\n      }, getAuthHeaders());\n      console.log(\"Update list name response:\", res.data);\n      setNotification(res.data.message);\n      setTimeout(() => setNotification(\"\"), 3000);\n    } catch (err) {\n      var _err$response20, _err$response21, _err$response21$data;\n      console.error(\"Error updating list name:\", ((_err$response20 = err.response) === null || _err$response20 === void 0 ? void 0 : _err$response20.data) || err);\n      const errorMessage = ((_err$response21 = err.response) === null || _err$response21 === void 0 ? void 0 : (_err$response21$data = _err$response21.data) === null || _err$response21$data === void 0 ? void 0 : _err$response21$data.error) || \"Ошибка при обновлении названия списка\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shopping-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentUserId === owner ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: listName,\n        onChange: e => setListName(e.target.value),\n        onBlur: updateListName,\n        className: \"list-name-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this) : listName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newItem,\n        onChange: e => setNewItem(e.target.value),\n        placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0442\\u043E\\u0432\\u0430\\u0440...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"item-list\",\n      children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: item.completed ? \"line-through\" : \"none\",\n          color: item.completed ? \"gray\" : \"black\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: item.completed,\n          onChange: () => toggleItemCompletion(item._id, !item.completed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), item.name]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteCompletedItems,\n      disabled: !items.some(item => item.completed),\n      children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043E\\u0442\\u043C\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0423\\u0447\\u0430\\u0441\\u0442\\u043D\\u0438\\u043A\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"member-list\",\n      children: members.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [member.email, member.userId === owner && \" (владелец)\", currentUserId === owner && member.userId !== owner && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeMember(member.userId),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this)]\n      }, member.userId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shareList,\n        children: \"\\u041F\\u043E\\u0434\\u0435\\u043B\\u0438\\u0442\\u044C\\u0441\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: leaveList,\n        children: \"\\u041F\\u043E\\u043A\\u0438\\u043D\\u0443\\u0442\\u044C \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/dashboard\"),\n        children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u0432 Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u0412\\u043B\\u0430\\u0434\\u0435\\u043B\\u0435\\u0446: \", ownerEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(ShoppingList, \"1k19fd5qz9XxPNe+rXtKt5U7wsE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ShoppingList;\nexport default ShoppingList;\nvar _c;\n$RefreshReg$(_c, \"ShoppingList\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","io","jsxDEV","_jsxDEV","API_URL","socket","autoConnect","ShoppingList","_s","listId","navigate","items","setItems","newItem","setNewItem","members","setMembers","owner","setOwner","ownerEmail","setOwnerEmail","listName","setListName","currentUserId","setCurrentUserId","notification","setNotification","getAuthHeaders","headers","Authorization","localStorage","getItem","fetchList","console","log","res","get","data","name","err","_err$response","_err$response2","_err$response3","_err$response3$data","_err$response4","_err$response5","error","response","errorMessage","status","setTimeout","connect","emit","userId","on","off","disconnect","addItem","post","_err$response6","_err$response7","_err$response8","_err$response8$data","toggleItemCompletion","itemId","completed","put","_err$response9","_err$response0","_err$response1","_err$response1$data","deleteCompletedItems","delete","_err$response10","_err$response11","_err$response12","_err$response12$data","joinList","message","_err$response13","_err$response14","_err$response15","_err$response15$data","shareList","listUrl","window","location","origin","navigator","clipboard","writeText","leaveList","_err$response16","_err$response17","_err$response17$data","removeMember","filter","m","_err$response18","_err$response19","_err$response19$data","updateListName","_err$response20","_err$response21","_err$response21$data","className","children","type","value","onChange","e","target","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","map","item","style","textDecoration","color","checked","_id","disabled","some","member","email","_c","$RefreshReg$"],"sources":["/Users/rahatmustafin/Documents/Projects/ShopSmart/client/src/components/ShoppingList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport \"./ShoppingList.css\";\n\nconst API_URL = \"http://localhost:5001\"; // Базовый URL сервера\nconst socket = io(API_URL, { autoConnect: false }); // Инициализация Socket.IO\n\nconst ShoppingList = () => {\n  const { listId } = useParams(); // Получаем listId из URL\n  const navigate = useNavigate();\n  const [items, setItems] = useState([]); // Список элементов\n  const [newItem, setNewItem] = useState(\"\"); // Новый элемент (ввод)\n  const [members, setMembers] = useState([]); // Участники списка\n  const [owner, setOwner] = useState(\"\"); // ID владельца\n  const [ownerEmail, setOwnerEmail] = useState(\"\"); // Email владельца\n  const [listName, setListName] = useState(\"\"); // Название списка\n  const [currentUserId, setCurrentUserId] = useState(\"\"); // ID текущего пользователя\n  const [notification, setNotification] = useState(\"\"); // Уведомления об ошибках/успехе\n\n  // Получение заголовков авторизации\n  const getAuthHeaders = () => ({\n    headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n  });\n\n  // Загрузка данных списка\n  const fetchList = async () => {\n    try {\n      console.log(\"Fetching list:\", listId);\n      const res = await axios.get(`${API_URL}/lists/${listId}`, getAuthHeaders());\n      console.log(\"List data:\", res.data);\n      setItems(res.data.items || []);\n      setMembers(res.data.members || []);\n      setOwner(res.data.owner);\n      setOwnerEmail(res.data.ownerEmail);\n      setListName(res.data.name);\n      setCurrentUserId(res.data.currentUserId);\n    } catch (err) {\n      console.error(\"Error fetching list:\", err.response?.data || err);\n      const errorMessage =\n        err.response?.status === 403\n          ? \"Вы не участник этого списка\"\n          : err.response?.data?.error || \"Ошибка при загрузке списка\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n      if (err.response?.status === 403 || err.response?.status === 404) {\n        navigate(\"/dashboard\");\n      }\n    }\n  };\n\n  // Подключение к Socket.IO при монтировании компонента\n  useEffect(() => {\n    console.log(\"Socket connecting for list:\", listId, \"user:\", localStorage.getItem(\"userId\"));\n    socket.connect();\n    socket.emit(\"joinList\", { listId, userId: localStorage.getItem(\"userId\") });\n\n    // Обработка события listUpdated\n    socket.on(\"listUpdated\", (data) => {\n      console.log(\"Received listUpdated:\", data);\n      setItems(data.items || []);\n      setMembers(data.members || []);\n      setListName(data.name || listName);\n    });\n\n    // Загрузка списка при монтировании\n    fetchList();\n\n    // Очистка при размонтировании\n    return () => {\n      console.log(\"Cleaning up socket listeners for list:\", listId);\n      socket.off(\"listUpdated\");\n      socket.disconnect();\n    };\n  }, [listId]);\n\n  // Добавление нового элемента\n  const addItem = async () => {\n    if (!newItem) return;\n    try {\n      console.log(\"Adding item:\", newItem, \"to list:\", listId);\n      const res = await axios.post(\n        `${API_URL}/lists/items/${listId}`,\n        { name: newItem },\n        getAuthHeaders()\n      );\n      console.log(\"Added items:\", res.data.items);\n      setItems(res.data.items);\n      socket.emit(\"updateList\", { listId, items: res.data.items });\n      setNewItem(\"\");\n    } catch (err) {\n      console.error(\"Error adding item:\", err.response?.data || err);\n      const errorMessage =\n        err.response?.status === 404\n          ? \"Список не найден\"\n          : err.response?.data?.error || \"Ошибка при добавлении товара\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Обновление статуса элемента (чекбокс)\n  const toggleItemCompletion = async (itemId, completed) => {\n    try {\n      console.log(\"Toggling item:\", itemId, \"to completed:\", completed);\n      const res = await axios.put(\n        `${API_URL}/lists/items/${itemId}/complete`,\n        { completed },\n        getAuthHeaders()\n      );\n      console.log(\"Updated items:\", res.data.items);\n      setItems(res.data.items);\n      socket.emit(\"updateList\", { listId, items: res.data.items });\n    } catch (err) {\n      console.error(\"Error toggling item completion:\", err.response?.data || err);\n      const errorMessage =\n        err.response?.status === 404\n          ? \"Элемент или список не найден\"\n          : err.response?.data?.error || \"Ошибка при обновлении статуса товара\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Удаление отмеченных элементов\n  const deleteCompletedItems = async () => {\n    try {\n      console.log(\"Deleting completed items from list:\", listId);\n      const res = await axios.delete(\n        `${API_URL}/lists/${listId}/items/completed`,\n        { headers: getAuthHeaders().headers }\n      );\n      console.log(\"Updated items after deletion:\", res.data.items);\n      setItems(res.data.items);\n      socket.emit(\"updateList\", { listId, items: res.data.items });\n    } catch (err) {\n      console.error(\"Error deleting completed items:\", err.response?.data || err);\n      const errorMessage =\n        err.response?.status === 404\n          ? \"Список не найден\"\n          : err.response?.data?.error || \"Ошибка при удалении отмеченных товаров\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Вступление в список (оставляем функцию, но убираем кнопку)\n  const joinList = async () => {\n    try {\n      console.log(\"Joining list:\", listId);\n      const res = await axios.post(\n        `${API_URL}/lists/join/${listId}`,\n        {},\n        getAuthHeaders()\n      );\n      console.log(\"Join list response:\", res.data);\n      setNotification(res.data.message);\n      setTimeout(() => setNotification(\"\"), 3000);\n      await fetchList();\n      socket.emit(\"joinList\", { listId, userId: localStorage.getItem(\"userId\") });\n    } catch (err) {\n      console.error(\"Error joining list:\", err.response?.data || err);\n      const errorMessage =\n        err.response?.status === 404\n          ? \"Список не найден\"\n          : err.response?.data?.error || \"Ошибка при вступлении в список\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Поделиться ссылкой на список\n  const shareList = async () => {\n    try {\n      const listUrl = `${window.location.origin}/list/${listId}`;\n      await navigator.clipboard.writeText(listUrl);\n      setNotification(\"Ссылка на список скопирована!\");\n      setTimeout(() => setNotification(\"\"), 3000);\n    } catch (err) {\n      console.error(\"Error copying list URL:\", err);\n      setNotification(\"Ошибка при копировании ссылки\");\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Выход из списка\n  const leaveList = async () => {\n    try {\n      console.log(\"Leaving list:\", listId);\n      const res = await axios.post(\n        `${API_URL}/lists/${listId}/leave`,\n        {},\n        getAuthHeaders()\n      );\n      console.log(\"Leave list response:\", res.data);\n      setNotification(res.data.message);\n      setTimeout(() => setNotification(\"\"), 3000);\n      navigate(\"/dashboard\");\n    } catch (err) {\n      console.error(\"Error leaving list:\", err.response?.data || err);\n      const errorMessage =\n        err.response?.data?.error || \"Ошибка при выходе из списка\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Удаление участника (для владельца)\n  const removeMember = async (userId) => {\n    try {\n      console.log(\"Removing member:\", userId, \"from list:\", listId);\n      const res = await axios.delete(\n        `${API_URL}/lists/${listId}/members/${userId}`,\n        getAuthHeaders()\n      );\n      console.log(\"Remove member response:\", res.data);\n      setNotification(res.data.message);\n      setTimeout(() => setNotification(\"\"), 3000);\n      setMembers(members.filter((m) => m.userId !== userId));\n      socket.emit(\"updateList\", { listId, members: members.filter((m) => m.userId !== userId) });\n    } catch (err) {\n      console.error(\"Error removing member:\", err.response?.data || err);\n      const errorMessage =\n        err.response?.data?.error || \"Ошибка при удалении участника\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  // Обновление названия списка (для владельца)\n  const updateListName = async () => {\n    try {\n      console.log(\"Updating list name to:\", listName, \"for list:\", listId);\n      const res = await axios.put(\n        `${API_URL}/lists/${listId}`,\n        { name: listName },\n        getAuthHeaders()\n      );\n      console.log(\"Update list name response:\", res.data);\n      setNotification(res.data.message);\n      setTimeout(() => setNotification(\"\"), 3000);\n    } catch (err) {\n      console.error(\"Error updating list name:\", err.response?.data || err);\n      const errorMessage =\n        err.response?.data?.error || \"Ошибка при обновлении названия списка\";\n      setNotification(errorMessage);\n      setTimeout(() => setNotification(\"\"), 3000);\n    }\n  };\n\n  return (\n    <div className=\"shopping-list\">\n      <h2>\n        {currentUserId === owner ? (\n          <input\n            type=\"text\"\n            value={listName}\n            onChange={(e) => setListName(e.target.value)}\n            onBlur={updateListName}\n            className=\"list-name-input\"\n          />\n        ) : (\n          listName\n        )}\n      </h2>\n      {notification && <div className=\"notification\">{notification}</div>}\n\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          value={newItem}\n          onChange={(e) => setNewItem(e.target.value)}\n          placeholder=\"Добавить товар...\"\n        />\n        <button onClick={addItem}>Добавить</button>\n      </div>\n\n      <ul className=\"item-list\">\n        {items.map((item) => (\n          <li\n            key={item._id}\n            style={{\n              textDecoration: item.completed ? \"line-through\" : \"none\",\n              color: item.completed ? \"gray\" : \"black\",\n            }}\n          >\n            <input\n              type=\"checkbox\"\n              checked={item.completed}\n              onChange={() => toggleItemCompletion(item._id, !item.completed)}\n            />\n            {item.name}\n          </li>\n        ))}\n      </ul>\n\n      <button onClick={deleteCompletedItems} disabled={!items.some((item) => item.completed)}>\n        Удалить отмеченные\n      </button>\n\n      <h3>Участники</h3>\n      <ul className=\"member-list\">\n        {members.map((member) => (\n          <li key={member.userId}>\n            {member.email}\n            {member.userId === owner && \" (владелец)\"}\n            {currentUserId === owner && member.userId !== owner && (\n              <button onClick={() => removeMember(member.userId)}>Удалить</button>\n            )}\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"action-buttons\">\n        <button onClick={shareList}>Поделиться</button>\n        <button onClick={leaveList}>Покинуть список</button>\n        <button onClick={() => navigate(\"/dashboard\")}>Вернуться в Dashboard</button>\n      </div>\n\n      <p>Владелец: {ownerEmail}</p>\n    </div>\n  );\n};\n\nexport default ShoppingList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}